Code specification
The indentation
Indent 4 Spaces at a time, using the space or TAB key

Variable naming
To be representative, use clear abbreviations, lower case initials, and camel case nomenclature
Function, the arguments inside the function are named as above
Capitalize the first letter of the class, make sense of the name, capitalize the first letter of the class, lowercase letters between words
All letters of constant words should be capitalized, and words and numbers should be connected by underscores
Maximum number of characters per line
Each line contains no more than 79 characters, allowing a few more comments

Maximum number of lines of a function
There should be no more than 50 lines in the function, and the excess should be split logically

Empty line rules
For functions outside the class, two empty lines should be added before and after the declaration of a class, and one blank line should be added above the declaration of an in-class function. Constant definitions and package introductions can be done without empty lines

Annotation rules
Class definitions, function declarations, global variables, and some key variables should be annotated, with comments on their functionality and usage. Single-line comments # can be above the same line or comment, and multi-line comments are above the line.

Operator before and after Spaces
Operators should be preceded by a space, except as explained later

Other rules
Do not use Spaces before and after parentheses and square brackets
A comma is not preceded by a space, but should be followed by a space
Functions should be declared with their return values, and arguments within functions should be declared with their types
A '#' comment should be two Spaces away from the character before it and one space away from the character after it
':' is preceded by no space and followed by one space
